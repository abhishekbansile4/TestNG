<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="108" passed="98" failed="10" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-03T18:14:47 IST" name="Command line suite" finished-at="2023-04-03T18:14:47 IST" duration-ms="143">
    <groups>
      <group name="TrigonometricFunctions">
        <method signature="CalculatorTest.verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyCos" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyCtg" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySin" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyTg" class="com.epam.testng.CalculatorTest"/>
      </group> <!-- TrigonometricFunctions -->
      <group name="PrimaryOperations">
        <method signature="CalculatorTest.verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyDiv" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyDiv" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyDivForException(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyDivForException" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyDivForException(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyDivForException" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyMult" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyMult" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifyPow" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySqrt" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySub" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySub" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySum" class="com.epam.testng.CalculatorTest"/>
        <method signature="CalculatorTest.verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" name="verifySum" class="com.epam.testng.CalculatorTest"/>
      </group> <!-- PrimaryOperations -->
    </groups>
    <test started-at="2023-04-03T18:14:47 IST" name="Command line test" finished-at="2023-04-03T18:14:47 IST" duration-ms="143">
      <class name="com.epam.testng.CalculatorTest">
        <test-method signature="verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCos" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="14" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.15425144988758405] but found [-0.9880316240928618]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.15425144988758405] but found [-0.9880316240928618]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyCos(CalculatorTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCos -->
        <test-method signature="verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCos" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[720]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.8390387292223656] but found [-0.5440716964379951]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.8390387292223656] but found [-0.5440716964379951]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyCos(CalculatorTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCos -->
        <test-method signature="verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCos" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyCos(CalculatorTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCos -->
        <test-method signature="verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCos" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-45]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5253219888177297] but found [-0.8509035245341184]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5253219888177297] but found [-0.8509035245341184]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyCos(CalculatorTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCos -->
        <test-method signature="verifyCos(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCos" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-420]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5624787751985085] but found [0.8268117243068012]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5624787751985085] but found [0.8268117243068012]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyCos(CalculatorTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCos -->
        <test-method signature="verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCtg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCtg -->
        <test-method signature="verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCtg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[720]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCtg -->
        <test-method signature="verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCtg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCtg -->
        <test-method signature="verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCtg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCtg -->
        <test-method signature="verifyCtg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyCtg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-420]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCtg -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDiv(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDiv" data-provider="dataProviderForDivOfLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiv -->
        <test-method signature="verifyDivForException(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDivForException" data-provider="dataProviderForDivOfLongWithException" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDivForException -->
        <test-method signature="verifyDivForException(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDivForException" data-provider="dataProviderForDivOfLongWithException" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDivForException -->
        <test-method signature="verifyDivForException(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDivForException" data-provider="dataProviderForDivOfLongWithException" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.testng.CalculatorTest.verifyDivForException(CalculatorTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDivForException -->
        <test-method signature="verifyDivForException(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyDivForException" data-provider="dataProviderForDivOfLongWithException" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.testng.CalculatorTest.verifyDivForException(CalculatorTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDivForException -->
        <test-method signature="verifyIsNegative(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsNegative" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNegative -->
        <test-method signature="verifyIsNegative(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsNegative" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNegative -->
        <test-method signature="verifyIsNegative(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsNegative" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNegative -->
        <test-method signature="verifyIsNegative(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsNegative" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNegative -->
        <test-method signature="verifyIsNegative(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsNegative" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNegative -->
        <test-method signature="verifyIsPositive(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsPositive" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPositive -->
        <test-method signature="verifyIsPositive(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsPositive" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPositive -->
        <test-method signature="verifyIsPositive(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsPositive" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPositive -->
        <test-method signature="verifyIsPositive(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsPositive" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPositive -->
        <test-method signature="verifyIsPositive(long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyIsPositive" data-provider="dataProviderToCheckLongType" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPositive -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyMult(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyMult" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMult -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifyPow(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyPow" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPow -->
        <test-method signature="verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySin" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySin -->
        <test-method signature="verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySin" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[720]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySin -->
        <test-method signature="verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySin" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySin -->
        <test-method signature="verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySin" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySin -->
        <test-method signature="verifySin(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySin" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-420]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySin -->
        <test-method signature="verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySqrt" data-provider="dataProviderForSquareRoot" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySqrt -->
        <test-method signature="verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySqrt" data-provider="dataProviderForSquareRoot" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1600]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySqrt -->
        <test-method signature="verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySqrt" data-provider="dataProviderForSquareRoot" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySqrt -->
        <test-method signature="verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySqrt" data-provider="dataProviderForSquareRoot" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySqrt -->
        <test-method signature="verifySqrt(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySqrt" data-provider="dataProviderForSquareRoot" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySqrt -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySub(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySub" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySub -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(double,double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForDouble" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifySum(long,long)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifySum" data-provider="dataProviderForLong" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySum -->
        <test-method signature="verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyTg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-6.4053311966462765] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-6.4053311966462765] but found [1.0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyTg(CalculatorTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTg -->
        <test-method signature="verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyTg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [NaN]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyTg(CalculatorTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTg -->
        <test-method signature="verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyTg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-45]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1.6197751905438615] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1.6197751905438615] but found [1.0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyTg(CalculatorTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTg -->
        <test-method signature="verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyTg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[720]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.6484464631832304] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.6484464631832304] but found [1.0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyTg(CalculatorTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTg -->
        <test-method signature="verifyTg(double)[pri:0, instance:com.epam.testng.CalculatorTest@6b1274d2]" started-at="2023-04-03T18:14:47 IST" name="verifyTg" data-provider="dataProviderForTrigonometryOperations" finished-at="2023-04-03T18:14:47 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-420]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.4699429752082733] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.4699429752082733] but found [1.0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEquals(Assert.java:727)
at org.testng.Assert.assertEquals(Assert.java:774)
at com.epam.testng.CalculatorTest.verifyTg(CalculatorTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.epam.testng.CustomTestRunner.main(CustomTestRunner.java:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTg -->
      </class> <!-- com.epam.testng.CalculatorTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
  <suite started-at="2023-04-03T18:14:47 IST" name="Default Suite" finished-at="2023-04-03T18:14:47 IST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Default Suite -->
</testng-results>
